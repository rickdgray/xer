{"version":3,"sources":["./src/app/sidebar/sidebar.component.html","./src/app/sidebar/sidebar.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/XerTable.ts","./src/app/app.module.ts","./src/app/main-table/main-table.component.ts","./src/app/main-table/main-table.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <nav class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\r\n            <div class=\"position-sticky pt-3\">\r\n                <ul class=\"nav flex-column\">\r\n                    <li *ngFor=\"let table of tables\" class=\"nav-item\"\r\n                        (click)=\"onSelect(table)\">\r\n                        <a class=\"nav-link\" [class.active]=\"table === selectedTable\">\r\n                            {{table.name}}\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n\r\n        <app-main-table [table]=\"selectedTable\"></app-main-table>\r\n    </div>\r\n</div>","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { XerTable } from '../models/XerTable';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\n\nexport class SidebarComponent implements OnInit {\n  @Input() tables?: XerTable[];\n\n  selectedTable?: XerTable;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.tables && changes.tables.currentValue && changes.tables.currentValue.length > 0) {\n      this.selectedTable = changes.tables.currentValue[0];\n    }\n  }\n\n  onSelect(table: XerTable): void {\n    this.selectedTable = table;\n  }\n}\n","export const environment = {\n  production: false\n};","import { Component } from '@angular/core';\nimport { XerTable } from './models/XerTable';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  tables?: XerTable[];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  getFile($event: Event): void {\n    const selectedFile = ($event.target as HTMLInputElement).files?.[0];\n\n    if (selectedFile && selectedFile.type === 'application/xer') {\n      const reader = new FileReader();\n      reader.onload = (event: ProgressEvent<FileReader>): void => {\n        if (event.target) {\n          this.tables = this.parseData(event.target.result as string);\n        }\n      };\n      reader.readAsText(selectedFile);\n    } else {\n      console.error('Invalid file!');\n    }\n  }\n\n  parseData(dataString: string): XerTable[] {\n    let data: XerTable[] = [];\n\n    let name: string = '';\n    let fields: string[] = [];\n    let rows: string[][] = [];\n\n    const lines = dataString.split('\\n');\n    lines.forEach((line: string) => {\n      const tokens = line.split('\\t');\n      switch (tokens[0]) {\n        case '%T':\n          if (name) {\n            data.push(new XerTable(name, fields, rows));\n          }\n          name = tokens[1] as string;\n          fields = [];\n          rows = [];\n          break;\n        case '%F':\n          tokens.slice(1).forEach((token: string) => {\n            fields.push(token)\n          });\n          break;\n        case '%R':\n          rows.push(tokens.slice(1));\n          break;\n        default:\n          break;\n      }\n    });\n\n    return data;\n  }\n}\n","<header class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n  <a class=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\" href=\"https://www.xertocsv.com/\">XER to CSV</a>\n  <ul class=\"navbar-nav px-3\">\n    <li class=\"nav-item text-nowrap\">\n      <button (click)=\"uploader.click()\" class=\"btn btn-sm btn-dark btn-outline-light\">Import XER</button>\n    </li>\n  </ul>\n</header>\n\n<input hidden type=\"file\" #uploader (change)=\"getFile($event)\" />\n\n<div class=\"content\" role=\"main\">\n  <app-sidebar [tables]=\"tables\"></app-sidebar>\n</div>","export class XerTable {\r\n    public readonly name: string;\r\n    public readonly fields: string[];\r\n    public readonly rows: string[][];\r\n\r\n    constructor(name: string, fields: string[], rows: string[][]) {\r\n        this.name = name;\r\n        this.fields = fields;\r\n        this.rows = rows;\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainTableComponent } from './main-table/main-table.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    MainTableComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport * as FileSaver from 'file-saver';\nimport { XerTable } from '../models/XerTable';\n\n@Component({\n  selector: 'app-main-table',\n  templateUrl: './main-table.component.html',\n  styleUrls: ['./main-table.component.scss']\n})\n\nexport class MainTableComponent implements OnInit {\n  @Input() table?: XerTable;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  downloadCsv(): void {\n    if (this.table) {\n      //handle commas for proper csv format\n      let fieldsAsString: string[] = [];\n      this.table.fields.forEach((field: string) => {\n        fieldsAsString.push(field.replace(',', '\",\"'));\n      });\n\n      let rowsAsString: string[] = [];\n      this.table.rows.forEach((row: string[]) => {\n        let cellsAsString: string[] = [];\n        row.forEach((cell: string) => {\n          cellsAsString.push(cell.replace(',', '\",\"'));\n        });\n        rowsAsString.push(cellsAsString.join(','));\n      });\n\n      const blob = new Blob([`${this.table.fields.join(',')}\\n${rowsAsString.join('\\n')}`], {\n        type: 'text/csv;charset=utf-8'\n      });\n      FileSaver.saveAs(blob, `${this.table.name}.csv`);\n    }\n  }\n}","<main *ngIf=\"table\" class=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n    <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\n        <h3 class=\"h3\">{{table.name}}</h3>\n        <div class=\"btn-toolbar mb-2 mb-md-0\">\n            <div class=\"btn-group me-2\">\n                <!-- <button type=\"button\" class=\"btn btn-sm btn-light btn-outline-dark\">Import CSV</button> -->\n                <button (click)=\"downloadCsv()\" class=\"btn btn-sm btn-light btn-outline-dark\">Export CSV</button>\n            </div>\n        </div>\n    </div>\n    \n    <div id=\"display-table\" class=\"table-responsive\">\n        <table class=\"table table-striped table-sm\">\n            <thead>\n                <tr>\n                    <th *ngFor=\"let field of table.fields\">{{field}}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let row of table.rows\">\n                    <td *ngFor=\"let cell of row\">{{cell}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</main>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}